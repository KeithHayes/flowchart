st=>start: Start split_text(text)

cond0=>condition: chunk_overlap > chunk_size?

cond0(yes)->op0=>operation: Raise ValueError
cond0(no)->op1=>operation: Split text by self._separator
→ list of lines

cond1=>condition: keep_separator == True?

cond1(yes)->op2=>operation: Add separator to all but last line
cond1(no)->op2b=>operation: Leave lines as-is

op3=>operation: Initialize:
• chunks = []
• current_chunk = []
• current_length = 0

op_loop=>operation: For each line in lines

cond2=>condition: Will line + current_chunk exceed chunk_size?

cond2(yes)->op4=>operation: Append current_chunk to chunks

op5=>operation: Build overlap_buffer from end of current_chunk
• Until overlap size is reached

op6=>operation: Set current_chunk = overlap_buffer
• Reset current_length = overlap_length

cond2(no)->op7=>operation: Add line to current_chunk
→ Update current_length

cond_end=>condition: More lines?

cond_end(yes)->op_loop
cond_end(no)->op8=>operation: Append remaining current_chunk to chunks

e=>end: Return chunks

st->cond0
cond0(no)->op1->cond1
cond1(yes)->op2->op3
cond1(no)->op2b->op3

op3->op_loop->cond2
cond2(yes)->op4->op5->op6->op7
cond2(no)->op7
op7->cond_end
cond_end(yes)->op_loop
cond_end(no)->op8->e
